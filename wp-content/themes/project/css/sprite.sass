// SASS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home
//   width: $icon-home-width
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites
$bar-h-name: 'bar-h'
$bar-h-x: 0px
$bar-h-y: 46px
$bar-h-offset-x: 0px
$bar-h-offset-y: -46px
$bar-h-width: 24px
$bar-h-height: 24px
$bar-h-total-width: 108px
$bar-h-total-height: 96px
$bar-h-image: 'sprite.png'
$bar-h: (0px, 46px, 0px, -46px, 24px, 24px, 108px, 96px, 'sprite.png', 'bar-h', )
$bar-name: 'bar'
$bar-x: 34px
$bar-y: 46px
$bar-offset-x: -34px
$bar-offset-y: -46px
$bar-width: 24px
$bar-height: 24px
$bar-total-width: 108px
$bar-total-height: 96px
$bar-image: 'sprite.png'
$bar: (34px, 46px, -34px, -46px, 24px, 24px, 108px, 96px, 'sprite.png', 'bar', )
$cart-h-name: 'cart-h'
$cart-h-x: 92px
$cart-h-y: 0px
$cart-h-offset-x: -92px
$cart-h-offset-y: 0px
$cart-h-width: 16px
$cart-h-height: 16px
$cart-h-total-width: 108px
$cart-h-total-height: 96px
$cart-h-image: 'sprite.png'
$cart-h: (92px, 0px, -92px, 0px, 16px, 16px, 108px, 96px, 'sprite.png', 'cart-h', )
$cart-name: 'cart'
$cart-x: 92px
$cart-y: 26px
$cart-offset-x: -92px
$cart-offset-y: -26px
$cart-width: 16px
$cart-height: 16px
$cart-total-width: 108px
$cart-total-height: 96px
$cart-image: 'sprite.png'
$cart: (92px, 26px, -92px, -26px, 16px, 16px, 108px, 96px, 'sprite.png', 'cart', )
$search-h-name: 'search-h'
$search-h-x: 92px
$search-h-y: 52px
$search-h-offset-x: -92px
$search-h-offset-y: -52px
$search-h-width: 16px
$search-h-height: 16px
$search-h-total-width: 108px
$search-h-total-height: 96px
$search-h-image: 'sprite.png'
$search-h: (92px, 52px, -92px, -52px, 16px, 16px, 108px, 96px, 'sprite.png', 'search-h', )
$search-name: 'search'
$search-x: 0px
$search-y: 80px
$search-offset-x: 0px
$search-offset-y: -80px
$search-width: 16px
$search-height: 16px
$search-total-width: 108px
$search-total-height: 96px
$search-image: 'sprite.png'
$search: (0px, 80px, 0px, -80px, 16px, 16px, 108px, 96px, 'sprite.png', 'search', )
$slider-arrow-left-name: 'slider-arrow-left'
$slider-arrow-left-x: 0px
$slider-arrow-left-y: 0px
$slider-arrow-left-offset-x: 0px
$slider-arrow-left-offset-y: 0px
$slider-arrow-left-width: 36px
$slider-arrow-left-height: 36px
$slider-arrow-left-total-width: 108px
$slider-arrow-left-total-height: 96px
$slider-arrow-left-image: 'sprite.png'
$slider-arrow-left: (0px, 0px, 0px, 0px, 36px, 36px, 108px, 96px, 'sprite.png', 'slider-arrow-left', )
$slider-arrow-right-name: 'slider-arrow-right'
$slider-arrow-right-x: 46px
$slider-arrow-right-y: 0px
$slider-arrow-right-offset-x: -46px
$slider-arrow-right-offset-y: 0px
$slider-arrow-right-width: 36px
$slider-arrow-right-height: 36px
$slider-arrow-right-total-width: 108px
$slider-arrow-right-total-height: 96px
$slider-arrow-right-image: 'sprite.png'
$slider-arrow-right: (46px, 0px, -46px, 0px, 36px, 36px, 108px, 96px, 'sprite.png', 'slider-arrow-right', )
$spritesheet-width: 108px
$spritesheet-height: 96px
$spritesheet-image: 'sprite.png'
$spritesheet-sprites: ($bar-h, $bar, $cart-h, $cart, $search-h, $search, $slider-arrow-left, $slider-arrow-right, )
$spritesheet: (108px, 96px, 'sprite.png', $spritesheet-sprites, )

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home
//   @include sprite-width($icon-home)
//
// .icon-email
//   @include sprite($icon-email)
//
// Example usage in HTML:
//   `display: block` sprite:
//   <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//   // CSS
//   .icon {
//     display: inline-block;
//   }
//
//   // HTML
//   <i class="icon icon-home"></i>
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SASS
//
// @include sprites($spritesheet-sprites)
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
